#!/usr/bin/perl -w
use strict;
use warnings FATAL => qw(all);
sub MY () {__PACKAGE__}
use base qw(File::Spec);

use File::Basename;
sub updir {my ($n, $fn) = @_; $fn = dirname($fn) while $n-- > 0; $fn}
my $libdir;
use lib $libdir = updir(3, MY->rel2abs(__FILE__));
# print STDERR join("\n", __FILE__, $libdir), "\n";

use YATT::Lite qw(*YATT);
use YATT::Lite::Util::CmdLine qw(parse_opts parse_params);
use YATT::Lite::Breakpoint;
# XXX: 各ディレクトリに .htyattcf.xhf が有ったら？ rc が有ったら?
# XXX: それらが無い状態で、 Web::* 環境での動作検証をしたいときは？

MY->parse_opts(\@ARGV, \ my %opts);
MY->parse_params(\@ARGV, \ my %common);

my $direct_mode = delete $opts{direct};

my $dispatcher = do {
  (my $cgi = $libdir) =~ s/\.\w+$/.cgi/;
  if (-r $cgi) {
    do $cgi;
  } else {
    die "Not implemented yet. Can't find driver: $cgi\n";
  }
};

# [1] Compile all.
my @command;
{
  while (@ARGV) {
    my $file = shift @ARGV;
    my %param = %common;
    MY->parse_params(\@ARGV, \%param);

    my $dir = dirname($file);
    my $dirhandler = $dispatcher->get_dirhandler($dir);
    my $trans = $dirhandler->open_trans;

    my ($part, $sub, $pkg) = $trans->find_part_handler(basename($file));
    
    push @command, [$dirhandler, $file, $sub, $pkg
		    , $part->reorder_hash_params(\%param)];
  }
}

# [2] Execute all.

foreach my $cmd (@command) {
  my ($dirhandler, $file, $sub, $this, @args) = @$cmd;
  local $YATT = $dirhandler;
  # XXX: make_connection?
  # XXX: cgi mode.
  $sub->($this, \*STDOUT, @args);
}

# exit 1 if $nerror;
