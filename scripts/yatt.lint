#!/usr/bin/env perl
#----------------------------------------
use strict;
use warnings FATAL => qw(all);
sub MY () {__PACKAGE__}
use base qw(File::Spec);
use File::Basename;
use FindBin;
my $libdir;
BEGIN {
  unless (grep {$_ eq 'YATT'} MY->splitdir($FindBin::Bin)) {
    die "Can't find YATT in runtime path: $FindBin::Bin\n";
  }
  $libdir = dirname(dirname($FindBin::Bin));
}
use lib $libdir;
#----------------------------------------

use YATT::Lite qw/*SYS/;
use YATT::Lite::Factory;
use YATT::Lite::Breakpoint;
use YATT::Lite::Util qw(default rootname);
use YATT::Lite::Error;
use YATT::Lite::CGen::Perl; # Just for debugging aid.

# XXX: 各ディレクトリに .htyattcf.xhf が有ったら？ rc が有ったら?
# XXX: それらが無い状態で、 Web::* 環境での動作検証をしたいときは？

# library の追加は？ <= .htyattrc で？違うよね?

$SYS = my $dispatcher = YATT::Lite::Factory->find_load_factory_script || do {
  require YATT::Lite::WebMVC0::SiteApp;
  YATT::Lite::WebMVC0::SiteApp->new
      (app_ns => 'MyApp'
       , namespace => ['yatt', 'perl', 'js']
       , header_charset => 'utf-8'
       , debug_cgen => $ENV{DEBUG}
       , debug_cgi  => $ENV{DEBUG_CGI}
       # , is_gateway => $ENV{GATEWAY_INTERFACE} # Too early for FastCGI.
       # , tmpl_encoding => 'utf-8'
      );
};

my $nerror = 0;
foreach my $fn (@ARGV) {
  my $dir = dirname($fn);
  my $dirhandler = $dispatcher->get_dirhandler($dir);
  $dirhandler->fconfigure_encoding(\*STDOUT, \*STDERR);
  $dirhandler->configure
    (error_handler => sub {
       (my $type, my YATT::Lite::Error $err) = splice @_, 0, 2;
       my @lineinfo = ("[file] ".default($err->{cf_tmpl_file}, '-')
		       , "[line] ".default($err->{cf_tmpl_line}, '-'));
       my $msg = $type . " [@lineinfo]\n "
	 .sprintf($err->{cf_format}, @{$err->{cf_args}});
       $msg .= "\n" unless $msg =~ m{\n\Z};
       print STDERR $msg;
       exit 1;
     });
  my $trans = $dirhandler->open_trans;
  my $tmpl = $trans->find_file(basename($fn)) or do {
    warn "No such file: $fn\n";
    $nerror++;
    next;
  };
  my $pkg = $trans->find_product(perl => $tmpl);
}

exit 1 if $nerror;
