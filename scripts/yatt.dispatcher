#!/usr/bin/env perl
#----------------------------------------
use strict;
use warnings FATAL => qw(all);
sub MY () {__PACKAGE__}
use base qw(File::Spec);
use File::Basename;
use FindBin;
my $libdir;
BEGIN {
  unless (grep {$_ eq 'YATT'} MY->splitdir($FindBin::Bin)) {
    die "Can't find YATT in runtime path: $FindBin::Bin\n";
  }
  $libdir = dirname(dirname($FindBin::Bin));
}
use lib $libdir;
#----------------------------------------
use YATT::Lite::Util::FindMethods;

use YATT::Lite::Factory;
use YATT::Lite qw(*YATT);
use YATT::Lite::Util qw(rootname);
use YATT::Lite::Breakpoint;

use YATT::Lite::Util::CmdLine qw/run/;

use Getopt::Long;

GetOptions("if_can" => \ my $if_can)
  or exit 1;

my $dispatcher = YATT::Lite::Factory->find_load_factory_script
  or die "Can't find YATT app script!\n";

# to_app is already done.

unless (@ARGV) {
  die <<END, join("\n", map {"  $_"} FindMethods($dispatcher, sub {s/^cmd_//}))."\n";
Usage: @{[basename($0)]} COMMAND args...

Available commands are:
END
}

my $command = $ARGV[0];
if ($dispatcher->can("cmd_$command") || $dispatcher->can($command)) {
  run($dispatcher, \@ARGV);
} elsif ($if_can) {
  exit
} else {
  die "No such command: $command\n";
}
