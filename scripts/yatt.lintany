#!/usr/bin/env perl
use strict;
use warnings FATAL => qw(all);
sub MY () {__PACKAGE__}
use base qw(File::Spec);

use File::Basename;
sub updir {my ($n, $fn) = @_; $fn = dirname($fn) while $n-- > 0; $fn}
my $libdir;
use lib $libdir = updir(3, MY->rel2abs(__FILE__));
# print STDERR join("\n", __FILE__, $libdir), "\n";

use YATT::Lite::Breakpoint;
use YATT::Lite::Util qw(default);
use YATT::Lite::Error;
# XXX: 各ディレクトリに .htyattcf.xhf が有ったら？ rc が有ったら?
# XXX: それらが無い状態で、 Web::* 環境での動作検証をしたいときは？

# library の追加は？ <= .htyattrc で？違うよね?

my $dispatcher = do {
  (my $base = $libdir) =~ s/\.\w+$//;
  my ($fn) = grep {-r} map {$base . $_} (qw(.psgi .cgi .fcgi))
    or die "Can't find bootscript!\n";
  do $fn;
};

sub fgrep (&@);

my $nerror = 0;
foreach my $fn (@ARGV) {
  unless (fgrep {/^\s*use strict\s*;/} $fn) {
    die "[use strict] is missing! in $fn\n";
  }
  my $dir = dirname($fn);
  my $dirhandler = $dispatcher->get_dirhandler($dir);
  my $action = $dirhandler->get_action_handler(basename($fn));
}

exit 1 if $nerror;

sub fgrep (&@) {
  my ($sub, $fn) = @_;
  open my $fh, '<', $fn or die "Can't open '$fn': $!";
  local $_;
  while (<$fh>) {
    return 1 if $sub->();
  }
}
