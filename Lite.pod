=encoding utf-8

=head1 NAME

YATT::Lite - Yet Another Template Toolkit, Lightweight rewrite.

=head1 SYNOPSIS

  # Minimum case:
  use YATT::Lite;

  my $tmpl = q{
    <!yatt:args title who="?World">
    <h2>&yatt:title;</h2>
    Hello &yatt:who;!
  
    <!yatt:widget alter title who="?Space">
    <div class="title">&yatt:title;</div>
    <div class="body">
    Hello &yatt:who;!
    </div>
  };

  # string based templating.
  my $yatt = YATT::Lite->new(vfs => [data => $tmpl], app_ns => "MyApp");

  # to invoke above template, call 'render' method.
  print $yatt->render("", {title => "My First YATT"}), "\n";

  # If you want to write large data directly into filehandle, use 'render_into'.
  $yatt->render_into(\*STDOUT, alter => ["My Second YATT"]);

  # Multiple template.
  my $yatt2 = YATT::Lite->new(vfs => [data => {foo => "..", bar => ".."}]
                             , app_ns => "MyApp2");
  print $yatt2->render(foo => [1,2]);
  print $yatt2->render(bar => [3,4]);

  # And filesystem based templating.
  my $yatt3 = YATT::Lite->new(vfs => [file => "my.yatt"], app_ns => "MyApp3");
  my $yatt4 = YATT::Lite->new(vfs => [dir  => "my.ytmpl"], app_ns => "MyApp4");

=head1 DESCRIPTION

YATT is Yet Another Template Toolkit, aimed at empowering Web Designers.
C<YATT::Lite> is latest version of YATT.
For overview, see L<readme|YATT::Lite::docs::readme>.

YATT::Lite converts templates into perl scripts on demand.


=head1 CONFIGS

=head2 vfs

=head2 app_ns

=head1 EXPORTS

=over 4

=item -as_base

=item Entity



=item *CON, *YATT, *SYS
X<*CON> X<*YATT> X<*SYS>

=back

=head1 METHODS

=head2 render($name, %$args)
X<render>

=head2 render_into($fh, $name, %$args)
X<render_into>

=head2 entity($name, @args)
X<entity>

=head2 find_handler($type, $name);
X<find_handler>

=head2 find_renderer

=head2 find_part

=head2 find_file

=head2 find_product

=head1 ENTITIES

=head2 template()

=head2 stash()

=head2 file_rootname()

=head1 HOOKS

=head2 _handle_$type($fh, $file)

=head2 _handle_yatt($fh, $file)

=head1 AUTHOR

"KOBAYASI, Hiroaki" <hkoba@cpan.org>

=cut
